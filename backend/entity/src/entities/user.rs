//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.2

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "user")]
pub struct Model {
  #[sea_orm(primary_key, auto_increment = false)]
  pub id: Uuid,
  pub name: String,
  pub image: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
  #[sea_orm(has_many = "super::bingo_user::Entity")]
  BingoUser,
}

impl Related<super::bingo_user::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::BingoUser.def()
  }
}

impl Related<super::bingo::Entity> for Entity {
  fn to() -> RelationDef {
    super::bingo_user::Relation::Bingo.def()
  }
  fn via() -> Option<RelationDef> {
    Some(super::bingo_user::Relation::User.def().rev())
  }
}

impl ActiveModelBehavior for ActiveModel {}
